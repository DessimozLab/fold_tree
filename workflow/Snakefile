
import snakemake.utils
snakemake.utils.min_version("7.8.0")
conda:  "../config/snake_tree.yaml"
#shell.executable("/bin/bash")
#shell.prefix("source /work/FAC/FBM/DBC/cdessim2/default/dmoi/condaenvs/etc/profile.d/conda.sh")


rule fastme:
	conda:
		"../config/snake_tree.yaml"
	input:
		"{folder}/fastmemat.txt"
	output:
		"{folder}/struct_tree.nwk"
	#log:
	#    "{folder}logs/fasttree.log",#path = config["path"]
	shell:
		'fastme -i {wildcards.folder}/fastmemat.txt -o {wildcards.folder}/struct_tree.nwk  -n '


rule fasttree:
	conda:
		"../config/snake_tree.yaml"
	input:
		alignment="{folder}sequences.aln.fst",#path = config["path"]  # Input alignment file
	output:
		tree="{folder}sequences.aln.fst.nwk", #path = config["path"] # Output tree file
	#log:
	#    "{folder}logs/fasttree.log",#path = config["path"]
	params:
		extra="",  # Additional arguments
	wrapper:
		"v1.20.0/bio/fasttree"

rule foldseek2distmat:
	conda:
		"../config/snake_tree.yaml"
	input:
		"{folder}/structaln_score.tsv"
	output:
		"{folder}/fastmemat.txt"
	script:
		"../src/foldseekres2distmat.py"

rule foldseek2tab:
	conda:
		"../config/snake_tree.yaml"
	input:
		"{folder}/aln.0"
	output:
		"{folder}/structaln_score.tsv"
	shell:
		'foldseek createtsv {wildcards.folder}/structblobDB {wildcards.folder}/structblobDB {wildcards.folder}/aln {wildcards.folder}/structaln_score.tsv'


rule foldseek_allvall:
	conda:
		"../config/snake_tree.yaml"
	input:
		"{folder}/structblobDB_h"
	output:
		"{folder}/aln.0"
	shell:
		'foldseek search {wildcards.folder}/structblobDB {wildcards.folder}/structblobDB {wildcards.folder}/aln {wildcards.folder}/tmp -a'

rule foldseekdb:
	conda:
		"../config/snake_tree.yaml"
	input:
		"{folder}/missing_structs.txt"
	output:
		"{folder}/structblobDB_h"
	shell:
		'foldseek createdb {wildcards.folder}/structs/ {wildcards.folder}/structblobDB '

rule dl_ids_sequences:
	conda: 
		"../config/snake_tree.yaml"
	input:
		ids="{folder}identifiers.txt",#path = config["path"]  # Input alignment file
	output:
		"{folder}sequences.fst",
		"{folder}sequence_dataset.csv",
	script:
		"../src/dl_sequences.py"

rule dl_ids_structs:
	conda: 
		"../config/snake_tree.yaml"
	input:
		ids="{folder}identifiers.txt",#path = config["path"]  # Input alignment file
	output:
		fasta="{folder}missing_structs.txt", #path = config["path"] # Output tree file
	#log:
	#    "{folder}logs/dl_ids.log",#path = config["path"]
	params:
		extra="",  # Additional arguments
	script:
		"../src/dl_structs.py"

rule clustalo:
	conda: 
		"../config/snake_tree.yaml"
	input:
		"{folder}sequences.fst",#path = config["path"]
	output:
		"{folder}sequences.aln.fst",#path = config["path"]
	params:
		extra="",
	#log:
	#    "{folder}logs/clustalo.log",# path = config["path"]
	threads: 1
	wrapper:
		"v1.20.0/bio/clustalo"


